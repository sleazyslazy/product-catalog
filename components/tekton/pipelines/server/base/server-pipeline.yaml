apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: server
spec:
  workspaces:
    - name: git-source
    - name: maven-settings
    - name: newman-env
    - name: gitops-manifests
    - name: slack-secret
      optional: true
    - name: acs-central
      optional: true
  params:
    - name: source_git_revision
      type: string
      default: master
    - name: source_git_url
      type: string
      default: https://github.com/sleazyslazy/product-catalog-server
    - name: gitops_git_revision
      type: string
      default: main
    - name: gitops_git_url
      type: string
      default: https://github.com/sleazyslazy/product-catalog
    - name: api_test_collection_url
      type: string
      default: https://raw.githubusercontent.com/sleazyslazy/product-catalog-server/master/tests/product-catalog-server-tests.json
    - name: MAVEN_MIRROR_URL
      default: ""
    - name: image_dest_url
      type: string
      description: External registry location to copy image to
      default: quay.io/suchugh/product-catalog
    - name: cluster
      type: string
      description: Cluster to push to
      default: "local.home"
    - name: MAVEN_IMAGE
      default: image-registry.openshift-image-registry.svc:5000/openshift/java:openjdk-11-ubi8
    - name: sonarqube_host
      default: sonarqube-sonarqube.apps.cluster-26j82.dynamic.redhatworkshops.io
      description: Where sonarqube is located to support project scanning
  tasks:
    - name: clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: git-source
      params:
        - name: url
          value: "$(params.source_git_url)"
        - name: revision
          value: "$(params.source_git_revision)"
        - name: deleteExisting
          value: "true"
    - name: generate-id
      taskRef:
        kind: Task
        name: generate-build-id
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: git-source
    - name: build
      taskRef:
        name: maven
        kind: Task
      workspaces:
        - name: source
          workspace: git-source
        - name: maven-settings
          workspace: maven-settings
      runAfter:
        - generate-id
      params:
        - name: MAVEN_IMAGE
          value: $(params.MAVEN_IMAGE)
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: MAVEN_REPO_CONFIG_SECRET
          value: "maven-repo-creds"
        - name: GOALS
          value:
            - "package"
            - "deploy"
    - name: quality
      taskRef:
        name: maven
        kind: Task
      workspaces:
        - name: source
          workspace: git-source
        - name: maven-settings
          workspace: maven-settings
      runAfter:
        - build
      params:
        - name: MAVEN_IMAGE
          value: $(params.MAVEN_IMAGE)
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: MAVEN_REPO_CONFIG_SECRET
          value: "maven-repo-creds"
        - name: GOALS
          value:
            - "sonar:sonar"
            - "-Pquality"
    - name: build-image
      taskRef:
        name: buildah
        kind: Task
      workspaces:
        - name: source
          workspace: git-source
      runAfter:
        - quality
      params:
      - name: IMAGE
        value: $(params.image_dest_url):latest
      - name: DOCKERFILE
        value: ./Containerfile
    - name: tag-dev-image
      taskRef:
        name: push-image
        kind: Task
      runAfter:
        - build-image
        # - deploy-nexus
      params:
        - name: src_image
          value: $(params.image_dest_url)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: dest_image
          value: $(params.image_dest_url)
        - name: dest_tags
          value: "$(tasks.generate-id.results.tag_id),dev"
    - name: clone-gitops-manifests
      taskRef:
        name: git-clone
        kind: ClusterTask
      runAfter:
        - tag-dev-image
      workspaces:
        - name: output
          workspace: gitops-manifests
      params:
        - name: url
          value: "$(params.gitops_git_url)"
        - name: revision
          value: "$(params.gitops_git_revision)"
        - name: deleteExisting
          value: "true"
    - name: dev-update-image
      taskRef:
        name: update-image
      runAfter:
        - clone-gitops-manifests
      params:
        - name: git_revision
          value: "$(params.gitops_git_revision)"
        - name: path
          value: clusters/$(params.cluster)/overlays/dev
        - name: image
          value: "$(params.image_dest_url)"
        - name: image_tag
          value: "$(tasks.generate-id.results.tag_id)"
      workspaces:
        - name: gitops-manifests
          workspace: gitops-manifests
    - name: dev-gitops-deploy
      taskRef:
        kind: ClusterTask
        name: argocd-task-sync-and-wait
      runAfter:
        - dev-update-image
      params:
        - name: application-name
          value: server-dev
        - name: revision
          value: $(params.gitops_git_revision)
        - name: deployment
          value: server
        - name: namespace
          value: product-catalog-dev
        - name: image_tag
          value: "$(tasks.generate-id.results.tag_id)"
    - name: dev-test
      taskRef:
        name: newman
        kind: Task
      runAfter:
        - dev-gitops-deploy
      params:
        - name: COLLECTION
          value: $(params.api_test_collection_url)
        - name: ENVIRONMENT
          value: newman-dev-env.json
      workspaces:
        - name: newman-env
          workspace: newman-env
    - name: tag-test-image
      taskRef:
        name: push-image
        kind: Task
      runAfter:
        - dev-test
      params:
        - name: src_image
          value: $(params.image_dest_url)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: dest_image
          value: $(params.image_dest_url)
        - name: dest_tags
          value: test
    - name: test-update-image
      taskRef:
        name: update-image
      runAfter:
        - tag-test-image
      params:
        - name: git_revision
          value: "$(params.gitops_git_revision)"
        - name: path
          value: clusters/$(params.cluster)/overlays/test
        - name: image
          value: "$(params.image_dest_url)"
        - name: image_tag
          value: "$(tasks.generate-id.results.tag_id)"
      workspaces:
        - name: gitops-manifests
          workspace: gitops-manifests
    - name: test-gitops-deploy
      taskRef:
        kind: ClusterTask
        name: argocd-task-sync-and-wait
      runAfter:
        - test-update-image
      params:
        - name: application-name
          value: server-test
        - name: revision
          value: $(params.gitops_git_revision)
        - name: deployment
          value: server
        - name: namespace
          value: product-catalog-test
        - name: image_tag
          value: "$(tasks.generate-id.results.tag_id)"
    - name: test-test
      taskRef:
        name: newman
        kind: Task
      runAfter:
        - test-gitops-deploy
      params:
        - name: COLLECTION
          value: $(params.api_test_collection_url)
        - name: ENVIRONMENT
          value: newman-test-env.json
      workspaces:
        - name: newman-env
          workspace: newman-env

 