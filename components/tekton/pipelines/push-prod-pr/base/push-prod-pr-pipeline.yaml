apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: push-prod-pr
spec:
  params:
    - default: main
      name: git_revision
      type: string
    - default: 'https://github.com/sleazyslazy/product-catalog'
      name: git_url
      type: string
    - description: 'The URL of the repo containing the source code for the application, used to construct a link for code changes'
      name: git_source_url
      type: string
    - description: External registry location of image to push without tag
      name: image_dest_url
      type: string
    - description: Tag of image to push to production
      name: image_dest_tag
      type: string
    - description: Cluster to push to
      name: cluster
      type: string
    - description: Either 'server' or 'client'
      name: app
      type: string
    - default: sonarqube-sonarqube.apps.cluster-26j82.dynamic.redhatworkshops.io
      description: Hostname for sonarqube
      name: sonarqube_host
      type: string
  tasks:
    - name: get-image-digest
      params:
        - name: image_dest_url
          value: $(params.image_dest_url)
        - name: image_dest_tag
          value: $(params.image_dest_tag)
      taskRef:
        kind: Task
        name: image-tag-to-digest
    - name: clone
      params:
        - name: url
          value: $(params.git_url)
        - name: revision
          value: $(params.git_revision)
        - name: deleteExisting
          value: 'true'
      runAfter:
        - get-image-digest
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: gitops-manifests
    - name: branch
      params:
        - name: commands
          value: |
            git checkout -b push-$(params.image_dest_tag)
      runAfter:
        - clone
      taskRef:
        kind: Task
        name: git
      workspaces:
        - name: source
          workspace: gitops-manifests
    - name: update-image
      params:
        - name: git_revision
          value: push-$(params.image_dest_tag)
        - name: path
          value: components/apps/server/overlays/prod
        - name: image
          value: $(params.image_dest_url)
        - name: image_tag
          value: $(params.image_dest_tag)
      runAfter:
        - branch
      taskRef:
        kind: Task
        name: update-image
      workspaces:
        - name: gitops-manifests
          workspace: gitops-manifests
    - name: create-commit-list
      params:
        - name: deployment
          value: $(params.app)
        - name: namespace
          value: product-catalog-prod
        - name: image_tag
          value: $(params.image_dest_tag)
        - name: git_source_url
          value: $(params.git_source_url)
      runAfter:
        - update-image
      taskRef:
        kind: Task
        name: create-commit-list
    - name: prod-pr-deploy
      params:
        - name: title
          value: Update $(params.app) image to $(params.image_dest_tag)
        - name: body
          value: |-
            ## Security Checklist

            - [ ] [Quay Image Vulnerabilities](https://$(params.image_dest_url):$(params.image_dest_tag))
            - [ ] [Sonarqube Results](https://$(params.sonarqube_host)/dashboard?id=product-catalog-$(params.app))

            ## Code Changes
            - [ ] $(tasks.create-commit-list.results.commit-list-message)
      runAfter:
        - create-commit-list
      taskRef:
        kind: Task
        name: task-create-pr
      when:
        - input: $(tasks.update-image.results.image_updated)
          operator: in
          values:
            - 'true'
      workspaces:
        - name: source
          workspace: gitops-manifests
  workspaces:
    - name: gitops-manifests
      persistentVolumeClaim:
        claimName: gitops-manifests